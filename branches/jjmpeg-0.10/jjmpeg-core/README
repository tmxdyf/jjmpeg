
REAMDE-core
-----------

This is the core jjmpeg library.  This includes the shared classes,
the code generator, and a (so far un-touched) copy of the ffmpeg
source against which it can be built for some platforms.

README
------

jjmpeg is an incomplete but usable wrapper for ffmpeg.  Much of the
binding is generated by a big ugly perl script, with some hand-rolled
JNI code where it is easier.

It contains some helper classes for common tasks which make reading
video files almost as easy as using ImageIO (or intend to).

Although explicit memory management is available for tight situations
it also includes automatic garbage collection support - how well it
works depends somewhat on the JVM.  It seems to work pretty well on a
desktop machine using the openjdk or oracle jvm.

STATUS
------

This is still work in progress, although there is enough functionality
to implement a number of media savvy applications.

The base API maps directly to the various libraries from ffmpeg, but
wrapped in an object-oriented api.

The jjmpeg-java sub-project is the one which builds the source and
libraries for Java environments.  It only builds on GNU/Linux using
cross compilations tools.

The jjmpeg-android sub-project is a port to Android.  It includes an
activity which implements a basic audio/video player available for
playing local or networked media resources.

USING
-----

A common jar file is used for all platforms:

jjmpeg-${version}.jar

For the native libraries, a system and architecture specific library
is available.

jjmpeg-${version}-native-${platform}-${architecture}.jar

The libraries in the given archive must be in the LD_LIBRARY_PATH to
use jjmpeg.

The basic classes are mostly undocumented but follow the corresponding
api's closely.

For selected platforms packages of the following name will also
be available:

jjmpeg-${version}-native-${platform}-${architecture}-ffmpeg.jar

These include a basic build of ffmpeg (one requiring no external
dependencies) as well.

To test, try running:
 java -classpath jjmpeg-${version}.jar au.notzed.jjmpeg.util.JJFileChooser

This should pop up a file requester which displays a preview
of a video.

BUILDING
--------

perl, gcc, a mingw32 cross compiler, the android sdk and the android
ndk are all required for a complete build.

jjmpeg will only build on a GNU system such as Fedora, Ubuntu, and so on.

The build system assumes the directories jjmpeg-core, jjmpeg-java, and
jjmpeg-android are present at the same level.  Either one or both of
jjmpeg-java and jjmpeg-android may be build separately or together.

$ make all

Will attempt to build all components.  At the moment it requires a cross
compiler for the mingwin32 targets to be in the path, and various other
configuration options within various makefiles inside the jni directories.

This leaves jjmpeg-core.jar and jjmpeg-java.jar as separate classes which
can be included together in other projects.

$ make dist

Will create a distribution archive.

This merges the class files of the jjmpeg-java and jjmpeg-core
projects into a single jar file, and packages up all the built native
libraries.

$ make

Will print a list of other targets available.

More information about the native builds and scripts are available in
a README in each jni/ directory of each project.

For extending the binding, see jjmpeg-core/jni/README.  Currently the
generated Java file AVAbstract.java must be copied by hand to the src
directory to overwrite the one currently there.

FFMPEG
------

The GNU targets assume a system ffmpeg library and headers is
available.

The mingwin32 target uses the bundled ffmpeg libraries, although they
are dlopened at run-time, so may be replaced.

The android target links statically to the bundled ffmpeg libraries.

LINKS
-----

jjmpeg is hosted on google code at the following url:
 http://code.google.com/p/jjmpeg

A log of development activity and thoughts:
 http://a-hackers-craic.blogspot.com/search/label/jjmpeg

A (very quiet) mailing list is available:
 http://groups.google.com/group/jjmpeg-discuss

LICENSE
-------

jjmpeg is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

jjmpeg is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
License for more details.

See the file COPYING for terms of use.
