class AVCodecContext
int,bit_rate,pgs
int,flags,pgs
int,width,pgs
int,height,pgs
PixelFormat,pix_fmt,pgse,,1
int,sample_rate,pgs
int,channels,pgs
int64_t,channel_layout,pgs
AVSampleFormat,sample_fmt,pgse,,1
int,frame_size,pgs
int,frame_number,pg
int,codec_type,pgs
int,codec_id,pgs,CodecID
int,gop_size,pgs,GOPSize
int,max_b_frames,pgs
AVRational,time_base,pgro
int,time_base.num,pgs,TimeBaseNum
int,time_base.den,pgs,TimeBaseDen
int,strict_std_compliance,pgs
int,idct_algo,pgs
int,error_concealment,pgs
int,mb_decision,pgs
int,thread_count,pgs
int,skip_frame,pgs
int,lowres,pgs
int,coded_width,pgs
int,coded_height,pgs
AVFrame,coded_frame,pgo
methods
prefix avcodec_ avcodec
native int avcodec_open(AVCodecContext *avctx, AVCodec *codec);
int avcodec_close(AVCodecContext *avctx);
int avcodec_decode_video2(AVCodecContext *avctx, AVFrame *picture, int *got_picture_ptr, AVPacket *avpkt);
int avcodec_encode_video(AVCodecContext *avctx, uint8_t *buf, int buf_size, AVFrame *pict);
int avcodec_decode_audio3(AVCodecContext *avctx, int16_t *samples, int *frame_size_ptr, AVPacket *avpkt);
int avcodec_decode_audio4(AVCodecContext *avctx, AVFrame *frame, int *got_frame_ptr, AVPacket *avpkt);
int avcodec_encode_audio(AVCodecContext *avctx, uint8_t *buf, int buf_size, const int16_t *samples);
void avcodec_flush_buffers(AVCodecContext *avctx);
protected static AVCodecContext *avcodec_alloc_context();
internal int avcodec_default_get_buffer(AVCodecContext *s, AVFrame *pic);
internal void avcodec_default_release_buffer(AVCodecContext *s, AVFrame *pic);
internal int avcodec_default_reget_buffer(AVCodecContext *s, AVFrame *pic);

class AVCodec
const char *,name,pg
methods
prefix avcodec_ avcodec
static AVCodec *avcodec_find_encoder(int id);
static AVCodec *avcodec_find_decoder(int id);
static AVCodec *avcodec_find_encoder_by_name(const char *name);
prefix av_ avcodec
internal int av_lockmgr_register(int (*cb)(void **mutex, enum AVLockOp op));

class AVFormatContext
AVInputFormat,iformat,pgso,InputFormat
AVOutputFormat,oformat,pgso,OutputFormat
AVIOContext,pb,pgso,IOContext
int,nb_streams,pg,NBStreams
AVStream,streams,pgio,Stream
int64_t,start_time,pg
int64_t,duration,pg
int,bit_rate,pg
int,flags,pgs
int,probesize,pgs
int,max_analyze_duration,pgs
methods
prefix av_ avformat
int av_seek_frame(AVFormatContext *s, int stream_index, int64_t timestamp, int flags);
int av_read_frame(AVFormatContext *s, AVPacket *pkt);
int av_write_frame(AVFormatContext *s, AVPacket *pkt);
native int av_interleaved_write_frame(AVFormatContext *s, AVPacket *pkt);
int av_write_trailer(AVFormatContext *s);
static void av_register_all();
internal int av_probe_input_buffer(AVIOContext *pb, AVInputFormat **fmt, const char *filename, void *logctx, unsigned int offset, unsigned int max_probe_size);
prefix avformat_ avformat
AVStream *avformat_new_stream(AVFormatContext *s, AVCodec *codec);
int avformat_seek_file(AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags);
static AVFormatContext *avformat_alloc_context();
protected void avformat_free_context(AVFormatContext *s);
static int avformat_network_init();
# hand-rolled stuff
internal int avformat_find_stream_info(AVFormatContext *ic, AVDictionary *options[]);
internal int avformat_open_input(AVFormatContext **ps, const char *filename, AVInputFormat *fmt, AVDictionary **options);
internal void avformat_close_input(AVFormatContext **s);
internal int avformat_write_header(AVFormatContext *s, AVDictionary **options);

class AVInputFormat
const char *,name,pg
const char *,long_name,pg
int,flags,pg
methods
prefix av_ avformat
static AVInputFormat *av_find_input_format(const char *short_name);

class AVOutputFormat
const char *,name,pg
const char *,long_name,pg
const char *,mime_type,pg
const char *,extensions,pg
int,video_codec,pg
int,audio_codec,pg
int,subtitle_codec,pg
int,flags,pgs
methods
prefix av_ avformat
static AVOutputFormat *av_guess_format(const char *short_name, const char *filename, const char *mime_type);

class AVFormatParameters

class AVPacket
int64_t,pts,pgs,PTS
int64_t,dts,pgs,DTS
int,size,pg
int,stream_index,pgs
int64_t,pos,pg
int,flags,pgs
methods
prefix av_ avcodec
void av_free_packet(AVPacket *pkt);
void av_init_packet(AVPacket *pkt);
int av_dup_packet(AVPacket *pkt);

class AVFrame
int,linesize,pgi,LineSize
int,key_frame,pg
int64_t,pts,pgs,PTS
int,display_picture_number,pg
int,coded_picture_number,pg
int,nb_samples,pgs
methods
prefix avcodec_ avcodec
native static AVFrame *avcodec_alloc_frame();
void avcodec_get_frame_defaults(AVFrame *pic);
int avcodec_fill_audio_frame(AVFrame *frame, int nb_channels, enum AVSampleFormat sample_fmt, uint8_t *buf, int buf_size, int align);
prefix avpicture_ avcodec
int avpicture_alloc(AVFrame *picture, int pix_fmt, int width, int height);
void avpicture_free(AVFrame *picture);
internal int avpicture_fill(AVPicture *picture, uint8_t *ptr, enum PixelFormat pix_fmt, int width, int height);
prefix av_picture_ avcodec
void av_picture_copy(AVFrame *dst, AVFrame *src, enum PixelFormat fmt, int width, int height);

class AVStream
int,index,pg
int,id,pg
AVCodecContext,codec,pgo
AVRational,r_frame_rate,pgro
AVRational,time_base,pgro
int64_t,start_time,pg
int64_t,duration,pg
int64_t,nb_frames,pg,NBFrames
methods
prefix av_ avformat

class AVRational
int,num,pgs
int,den,pgs
methods
prefix av_ avutil
static int64_t av_rescale(int64_t a, int64_t b, int64_t c);
internal int64_t av_rescale_q(int64_t a, AVRational bq, AVRational cq);
# place-holder for avutil internal stuff
internal void av_free(void *ptr);
internal void *av_malloc(size_t size);
internal void av_log_set_level(int);
internal void av_log_set_callback(void (*)(void*, int, const char*, va_list));
internal int av_samples_get_buffer_size(int *linesize, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align);

class AVIOContext
methods
prefix avio_ avformat
int avio_close(AVIOContext *s);
internal AVIOContext *avio_alloc_context(unsigned char *buffer, int buffer_size, int write_flag, void *opaque, int (*read_packet)(void *opaque, uint8_t *buf, int buf_size), int (*write_packet)(void *opaque, uint8_t *buf, int buf_size), int64_t (*seek)(void *opaque, int64_t offset, int whence));
internal int avio_open(AVIOContext **s, const char *url, int flags);

class SwsContext
methods
prefix sws_ swscale
native static SwsContext *sws_getContext(int srcW, int srcH, enum PixelFormat srcFormat, int dstW, int dstH, enum PixelFormat dstFormat, int flags, SwsFilter *srcFilter, SwsFilter *dstFilter, const double *param);
void sws_freeContext(SwsContext *swsContext);
internal int sws_scale(struct SwsContext *c, const uint8_t *const srcSlice[],  const int srcStride[], int srcSliceY, int srcSliceH, uint8_t *const dst[], const int dstStride[]);

class SwsFilter

class SwrContext
methods
prefix swr_ swresample
int swr_set_compensation(SwrContext *s, int sample_delta, int compensation_distance);
internal struct SwrContext *swr_alloc_set_opts(struct SwrContext *s, int64_t out_ch_layout, enum AVSampleFormat out_sample_fmt, int out_sample_rate, int64_t  in_ch_layout, enum AVSampleFormat  in_sample_fmt, int  in_sample_rate, int log_offset, void *log_ctx);
internal int swr_init(struct SwrContext *s);
internal void swr_free(struct SwrContext **s);
internal int swr_convert(struct SwrContext *s, uint8_t *out[SWR_CH_MAX], int out_count, const uint8_t *in [SWR_CH_MAX], int in_count);

class AVDictionary

class AVDevice HAVE_AVDEVICE
methods
prefix avdevice_ avdevice
optional static void avdevice_register_all();
optional static int avdevice_version();
